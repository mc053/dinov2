Wed Jan  1 10:02:59 AM CET 2025
Testing if paddle works
Running on: tars
Available CPUs: pid 3069175's current affinity list: 6,7,70,71 (logical CPU ids)
Available GPUs: Wed Jan  1 10:02:59 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 550.54.14              Driver Version: 550.54.14      CUDA Version: 12.4     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA RTX A6000               Off |   00000000:21:00.0 Off |                  Off |
| 30%   34C    P8             22W /  300W |       0MiB /  49140MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
download https://paddleocr.bj.bcebos.com/PP-OCRv3/english/en_PP-OCRv3_det_infer.tar to /home/stud/m/mc085/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer/en_PP-OCRv3_det_infer.tar
  0%|          | 0/3910 [00:00<?, ?it/s]  0%|          | 3/3910 [00:00<04:54, 13.26it/s]  1%|          | 35/3910 [00:00<00:48, 79.76it/s]  2%|▏         | 67/3910 [00:00<00:38, 101.05it/s]  2%|▏         | 83/3910 [00:00<00:38, 99.22it/s]   3%|▎         | 115/3910 [00:01<00:38, 98.70it/s]  4%|▍         | 147/3910 [00:01<00:39, 95.00it/s]  4%|▍         | 163/3910 [00:01<00:41, 90.02it/s]  5%|▍         | 179/3910 [00:02<00:44, 84.76it/s]  5%|▍         | 195/3910 [00:02<00:41, 88.71it/s]  5%|▌         | 211/3910 [00:02<00:43, 84.84it/s]  6%|▌         | 227/3910 [00:02<00:44, 83.16it/s]  6%|▌         | 243/3910 [00:02<00:46, 78.56it/s]  7%|▋         | 259/3910 [00:03<00:46, 79.22it/s]  7%|▋         | 275/3910 [00:03<00:43, 84.30it/s]  7%|▋         | 291/3910 [00:03<00:44, 81.61it/s]  8%|▊         | 307/3910 [00:03<00:45, 79.83it/s]  8%|▊         | 323/3910 [00:03<00:46, 77.62it/s]  9%|▊         | 339/3910 [00:04<00:45, 78.55it/s]  9%|▉         | 355/3910 [00:04<00:43, 81.66it/s]  9%|▉         | 371/3910 [00:04<00:46, 75.66it/s] 10%|▉         | 387/3910 [00:04<00:50, 70.10it/s] 10%|█         | 403/3910 [00:04<00:49, 70.26it/s] 11%|█         | 419/3910 [00:05<00:49, 70.32it/s] 11%|█         | 435/3910 [00:05<00:49, 70.42it/s] 12%|█▏        | 451/3910 [00:05<00:50, 68.37it/s] 12%|█▏        | 467/3910 [00:05<00:50, 68.52it/s] 12%|█▏        | 483/3910 [00:06<00:49, 68.66it/s] 13%|█▎        | 499/3910 [00:06<00:49, 68.71it/s] 13%|█▎        | 515/3910 [00:06<00:50, 67.23it/s] 14%|█▎        | 531/3910 [00:06<00:49, 67.72it/s] 14%|█▍        | 547/3910 [00:07<00:51, 64.90it/s] 14%|█▍        | 563/3910 [00:07<00:53, 63.07it/s] 15%|█▍        | 579/3910 [00:07<00:53, 61.84it/s] 15%|█▌        | 595/3910 [00:07<00:55, 59.61it/s] 16%|█▌        | 611/3910 [00:08<00:55, 59.34it/s] 16%|█▌        | 627/3910 [00:08<00:55, 58.84it/s] 16%|█▋        | 643/3910 [00:08<00:55, 58.47it/s] 17%|█▋        | 659/3910 [00:09<01:00, 53.39it/s] 17%|█▋        | 675/3910 [00:09<01:00, 53.86it/s] 18%|█▊        | 691/3910 [00:10<01:18, 41.15it/s] 18%|█▊        | 707/3910 [00:10<01:08, 47.06it/s] 18%|█▊        | 723/3910 [00:10<01:02, 51.27it/s] 19%|█▉        | 739/3910 [00:10<00:56, 56.03it/s] 19%|█▉        | 755/3910 [00:10<00:52, 59.98it/s] 20%|█▉        | 771/3910 [00:11<00:49, 63.19it/s] 20%|██        | 787/3910 [00:11<00:48, 64.82it/s] 21%|██        | 803/3910 [00:11<00:43, 71.04it/s] 21%|██        | 819/3910 [00:11<00:40, 76.48it/s] 21%|██▏       | 835/3910 [00:11<00:36, 83.28it/s] 22%|██▏       | 851/3910 [00:12<00:33, 90.58it/s] 22%|██▏       | 867/3910 [00:12<00:31, 96.00it/s] 23%|██▎       | 883/3910 [00:12<00:28, 104.90it/s] 23%|██▎       | 899/3910 [00:12<00:26, 113.35it/s] 23%|██▎       | 915/3910 [00:12<00:24, 122.70it/s] 24%|██▍       | 947/3910 [00:12<00:21, 136.91it/s] 25%|██▌       | 979/3910 [00:12<00:19, 152.64it/s] 26%|██▌       | 1011/3910 [00:13<00:17, 169.83it/s] 27%|██▋       | 1043/3910 [00:13<00:15, 186.04it/s] 27%|██▋       | 1075/3910 [00:13<00:14, 197.71it/s] 28%|██▊       | 1107/3910 [00:13<00:12, 216.67it/s] 29%|██▉       | 1139/3910 [00:13<00:11, 235.32it/s] 30%|██▉       | 1171/3910 [00:13<00:10, 253.94it/s] 31%|███       | 1203/3910 [00:13<00:10, 267.56it/s] 32%|███▏      | 1251/3910 [00:13<00:08, 300.33it/s] 33%|███▎      | 1299/3910 [00:14<00:08, 323.71it/s] 34%|███▍      | 1347/3910 [00:14<00:07, 347.79it/s] 36%|███▌      | 1395/3910 [00:14<00:06, 372.87it/s] 37%|███▋      | 1443/3910 [00:14<00:06, 398.65it/s] 39%|███▊      | 1507/3910 [00:14<00:05, 436.39it/s] 40%|████      | 1571/3910 [00:14<00:05, 466.64it/s] 42%|████▏     | 1635/3910 [00:14<00:04, 504.29it/s] 43%|████▎     | 1699/3910 [00:14<00:04, 535.49it/s] 45%|████▌     | 1779/3910 [00:14<00:03, 580.40it/s] 48%|████▊     | 1859/3910 [00:15<00:03, 623.96it/s] 50%|████▉     | 1939/3910 [00:15<00:02, 667.85it/s] 52%|█████▏    | 2035/3910 [00:15<00:02, 718.00it/s] 55%|█████▍    | 2131/3910 [00:15<00:02, 774.37it/s] 57%|█████▋    | 2227/3910 [00:15<00:02, 824.06it/s] 60%|█████▉    | 2339/3910 [00:15<00:01, 880.99it/s] 63%|██████▎   | 2451/3910 [00:15<00:01, 945.07it/s] 66%|██████▌   | 2579/3910 [00:15<00:01, 1015.04it/s] 69%|██████▉   | 2707/3910 [00:15<00:01, 1084.62it/s] 73%|███████▎  | 2851/3910 [00:15<00:00, 1166.70it/s] 77%|███████▋  | 2995/3910 [00:16<00:00, 1241.50it/s] 81%|████████  | 3155/3910 [00:16<00:00, 1329.96it/s] 85%|████████▌ | 3331/3910 [00:16<00:00, 1424.73it/s] 90%|████████▉ | 3507/3910 [00:16<00:00, 1519.12it/s] 95%|█████████▍| 3699/3910 [00:16<00:00, 1626.70it/s]100%|██████████| 3910/3910 [00:16<00:00, 235.58it/s] 
download https://paddleocr.bj.bcebos.com/PP-OCRv4/english/en_PP-OCRv4_rec_infer.tar to /home/stud/m/mc085/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer/en_PP-OCRv4_rec_infer.tar
  0%|          | 0/10000 [00:00<?, ?it/s]  0%|          | 19/10000 [00:00<02:33, 64.90it/s]  1%|          | 67/10000 [00:00<01:22, 120.82it/s]  1%|          | 99/10000 [00:00<01:25, 115.69it/s]  1%|▏         | 147/10000 [00:01<01:14, 132.86it/s]  2%|▏         | 179/10000 [00:01<01:18, 124.56it/s]  2%|▏         | 227/10000 [00:01<01:19, 122.64it/s]  2%|▏         | 243/10000 [00:02<01:29, 108.97it/s]  3%|▎         | 259/10000 [00:02<01:29, 108.46it/s]  3%|▎         | 275/10000 [00:02<01:41, 95.42it/s]   3%|▎         | 291/10000 [00:02<01:50, 88.02it/s]  3%|▎         | 307/10000 [00:02<01:46, 90.70it/s]  3%|▎         | 323/10000 [00:03<01:54, 84.39it/s]  3%|▎         | 339/10000 [00:03<02:02, 79.14it/s]  4%|▎         | 355/10000 [00:03<01:51, 86.32it/s]  4%|▎         | 371/10000 [00:03<01:58, 81.11it/s]  4%|▍         | 387/10000 [00:03<02:08, 74.91it/s]  4%|▍         | 403/10000 [00:04<01:54, 83.98it/s]  4%|▍         | 419/10000 [00:04<02:00, 79.47it/s]  4%|▍         | 435/10000 [00:04<02:08, 74.53it/s]  5%|▍         | 451/10000 [00:04<01:53, 84.25it/s]  5%|▍         | 467/10000 [00:04<02:04, 76.59it/s]  5%|▍         | 483/10000 [00:05<02:19, 68.40it/s]  5%|▍         | 499/10000 [00:05<02:27, 64.58it/s]  5%|▌         | 515/10000 [00:05<02:32, 62.12it/s]  5%|▌         | 531/10000 [00:06<02:39, 59.39it/s]  5%|▌         | 547/10000 [00:06<02:28, 63.78it/s]  6%|▌         | 563/10000 [00:06<02:34, 61.19it/s]  6%|▌         | 579/10000 [00:06<02:37, 59.92it/s]  6%|▌         | 595/10000 [00:07<02:42, 57.97it/s]  6%|▌         | 611/10000 [00:07<02:41, 58.08it/s]  6%|▋         | 627/10000 [00:07<02:41, 58.16it/s]  6%|▋         | 643/10000 [00:08<02:40, 58.23it/s]  7%|▋         | 659/10000 [00:08<02:48, 55.49it/s]  7%|▋         | 675/10000 [00:08<03:00, 51.80it/s]  7%|▋         | 691/10000 [00:09<03:06, 49.95it/s]  7%|▋         | 707/10000 [00:09<03:49, 40.53it/s]  7%|▋         | 723/10000 [00:10<04:12, 36.72it/s]  7%|▋         | 739/10000 [00:10<03:48, 40.47it/s]  8%|▊         | 755/10000 [00:10<03:27, 44.50it/s]  8%|▊         | 771/10000 [00:10<03:13, 47.81it/s]  8%|▊         | 787/10000 [00:11<03:00, 51.17it/s]  8%|▊         | 803/10000 [00:11<02:47, 54.95it/s]  8%|▊         | 819/10000 [00:11<02:33, 59.93it/s]  8%|▊         | 835/10000 [00:11<02:18, 66.00it/s]  9%|▊         | 851/10000 [00:12<02:07, 71.86it/s]  9%|▊         | 867/10000 [00:12<01:59, 76.22it/s]  9%|▉         | 883/10000 [00:12<01:49, 83.33it/s]  9%|▉         | 899/10000 [00:12<01:40, 90.29it/s]  9%|▉         | 915/10000 [00:12<01:33, 97.24it/s]  9%|▉         | 931/10000 [00:12<01:29, 101.78it/s]  9%|▉         | 947/10000 [00:12<01:22, 109.89it/s] 10%|▉         | 963/10000 [00:13<01:17, 117.20it/s] 10%|▉         | 995/10000 [00:13<01:10, 128.27it/s] 10%|█         | 1027/10000 [00:13<01:03, 140.88it/s] 11%|█         | 1059/10000 [00:13<00:58, 153.89it/s] 11%|█         | 1091/10000 [00:13<00:53, 166.69it/s] 11%|█         | 1123/10000 [00:13<00:49, 179.59it/s] 12%|█▏        | 1155/10000 [00:14<00:47, 188.17it/s] 12%|█▏        | 1187/10000 [00:14<00:43, 202.79it/s] 12%|█▏        | 1219/10000 [00:14<00:40, 217.39it/s] 13%|█▎        | 1251/10000 [00:14<00:37, 232.22it/s] 13%|█▎        | 1283/10000 [00:14<00:36, 241.59it/s] 13%|█▎        | 1315/10000 [00:14<00:33, 258.15it/s] 14%|█▎        | 1355/10000 [00:14<00:29, 294.85it/s] 14%|█▍        | 1395/10000 [00:14<00:29, 288.07it/s] 14%|█▍        | 1443/10000 [00:15<00:27, 308.82it/s] 15%|█▍        | 1491/10000 [00:15<00:25, 328.96it/s] 15%|█▌        | 1539/10000 [00:15<00:24, 349.02it/s] 16%|█▌        | 1587/10000 [00:15<00:22, 375.22it/s] 16%|█▋        | 1635/10000 [00:15<00:21, 394.03it/s] 17%|█▋        | 1683/10000 [00:15<00:20, 413.96it/s] 17%|█▋        | 1747/10000 [00:15<00:18, 437.96it/s] 18%|█▊        | 1811/10000 [00:15<00:17, 468.07it/s] 19%|█▉        | 1875/10000 [00:16<00:16, 491.27it/s] 19%|█▉        | 1939/10000 [00:16<00:15, 521.89it/s] 20%|██        | 2003/10000 [00:16<00:14, 552.10it/s] 21%|██        | 2067/10000 [00:16<00:13, 575.65it/s] 21%|██▏       | 2147/10000 [00:16<00:12, 609.76it/s] 22%|██▏       | 2227/10000 [00:16<00:12, 644.26it/s] 23%|██▎       | 2307/10000 [00:16<00:11, 677.82it/s] 24%|██▍       | 2402/10000 [00:16<00:10, 754.68it/s] 25%|██▍       | 2483/10000 [00:16<00:10, 738.42it/s] 26%|██▌       | 2579/10000 [00:16<00:09, 780.66it/s] 27%|██▋       | 2675/10000 [00:17<00:08, 829.40it/s] 28%|██▊       | 2787/10000 [00:17<00:08, 872.38it/s] 29%|██▉       | 2899/10000 [00:17<00:07, 923.01it/s] 30%|███       | 3011/10000 [00:17<00:07, 972.73it/s] 31%|███▏      | 3139/10000 [00:17<00:06, 1025.85it/s] 33%|███▎      | 3267/10000 [00:17<00:06, 1078.58it/s] 34%|███▍      | 3395/10000 [00:17<00:05, 1130.34it/s] 35%|███▌      | 3539/10000 [00:17<00:05, 1184.79it/s] 37%|███▋      | 3683/10000 [00:17<00:05, 1251.97it/s] 38%|███▊      | 3843/10000 [00:18<00:04, 1314.18it/s] 40%|████      | 4003/10000 [00:18<00:04, 1382.60it/s] 42%|████▏     | 4179/10000 [00:18<00:04, 1453.57it/s] 44%|████▎     | 4355/10000 [00:18<00:03, 1533.65it/s] 45%|████▌     | 4547/10000 [00:18<00:03, 1609.81it/s] 47%|████▋     | 4739/10000 [00:18<00:03, 1694.50it/s] 49%|████▉     | 4947/10000 [00:18<00:02, 1780.52it/s] 52%|█████▏    | 5155/10000 [00:18<00:02, 1865.11it/s] 54%|█████▍    | 5379/10000 [00:18<00:02, 1958.99it/s] 56%|█████▌    | 5619/10000 [00:18<00:02, 2062.83it/s] 59%|█████▊    | 5859/10000 [00:19<00:01, 2158.54it/s] 61%|██████    | 6115/10000 [00:19<00:01, 2272.74it/s] 64%|██████▍   | 6387/10000 [00:19<00:01, 2383.28it/s] 67%|██████▋   | 6675/10000 [00:19<00:01, 2503.96it/s] 70%|██████▉   | 6979/10000 [00:19<00:01, 2628.50it/s] 73%|███████▎  | 7299/10000 [00:19<00:00, 2763.42it/s] 76%|███████▋  | 7635/10000 [00:19<00:00, 2901.51it/s] 80%|███████▉  | 7987/10000 [00:19<00:00, 3043.07it/s] 84%|████████▎ | 8355/10000 [00:19<00:00, 3198.01it/s] 87%|████████▋ | 8739/10000 [00:20<00:00, 3353.88it/s] 91%|█████████▏| 9139/10000 [00:20<00:00, 3520.94it/s] 96%|█████████▌| 9555/10000 [00:20<00:00, 3691.87it/s]100%|██████████| 10000/10000 [00:20<00:00, 492.06it/s]
download https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_cls_infer.tar to /home/stud/m/mc085/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer/ch_ppocr_mobile_v2.0_cls_infer.tar
  0%|          | 0/2138 [00:00<?, ?it/s]  0%|          | 3/2138 [00:00<03:19, 10.72it/s]  2%|▏         | 35/2138 [00:00<00:31, 66.69it/s]  3%|▎         | 67/2138 [00:00<00:24, 84.17it/s]  4%|▍         | 83/2138 [00:01<00:26, 78.79it/s]  5%|▌         | 115/2138 [00:01<00:24, 83.49it/s]  7%|▋         | 147/2138 [00:01<00:24, 81.16it/s]  8%|▊         | 163/2138 [00:02<00:27, 72.93it/s]  8%|▊         | 179/2138 [00:02<00:29, 67.12it/s]  9%|▉         | 195/2138 [00:02<00:30, 64.05it/s] 10%|▉         | 211/2138 [00:03<00:31, 61.84it/s] 11%|█         | 227/2138 [00:03<00:31, 60.28it/s] 11%|█▏        | 243/2138 [00:03<00:32, 59.16it/s] 12%|█▏        | 259/2138 [00:03<00:32, 57.43it/s] 13%|█▎        | 275/2138 [00:04<00:31, 58.99it/s] 14%|█▎        | 291/2138 [00:04<00:30, 61.29it/s] 14%|█▍        | 307/2138 [00:04<00:29, 62.21it/s] 15%|█▌        | 323/2138 [00:04<00:30, 59.36it/s] 16%|█▌        | 339/2138 [00:05<00:34, 52.11it/s] 17%|█▋        | 355/2138 [00:05<00:36, 48.82it/s] 17%|█▋        | 371/2138 [00:06<00:36, 49.02it/s] 18%|█▊        | 387/2138 [00:06<00:36, 48.06it/s] 19%|█▉        | 403/2138 [00:06<00:35, 48.47it/s] 20%|█▉        | 419/2138 [00:07<00:35, 48.77it/s] 20%|██        | 435/2138 [00:07<00:34, 48.97it/s] 21%|██        | 451/2138 [00:07<00:35, 48.03it/s] 22%|██▏       | 467/2138 [00:08<00:34, 48.47it/s] 23%|██▎       | 483/2138 [00:08<00:35, 46.54it/s] 23%|██▎       | 499/2138 [00:08<00:34, 47.00it/s] 24%|██▍       | 515/2138 [00:09<00:34, 47.50it/s] 25%|██▍       | 531/2138 [00:09<00:40, 39.79it/s] 26%|██▌       | 547/2138 [00:10<00:43, 36.94it/s] 26%|██▋       | 563/2138 [00:10<00:39, 39.94it/s] 27%|██▋       | 579/2138 [00:10<00:36, 42.46it/s] 28%|██▊       | 595/2138 [00:11<00:33, 45.59it/s] 29%|██▊       | 611/2138 [00:11<00:30, 50.18it/s] 29%|██▉       | 627/2138 [00:11<00:27, 55.93it/s] 30%|███       | 643/2138 [00:11<00:24, 61.87it/s] 31%|███       | 659/2138 [00:11<00:22, 67.17it/s] 32%|███▏      | 675/2138 [00:12<00:19, 74.53it/s] 32%|███▏      | 691/2138 [00:12<00:17, 82.02it/s] 33%|███▎      | 707/2138 [00:12<00:15, 89.80it/s] 34%|███▍      | 723/2138 [00:12<00:14, 95.91it/s] 35%|███▍      | 739/2138 [00:12<00:13, 103.95it/s] 35%|███▌      | 755/2138 [00:12<00:12, 112.54it/s] 36%|███▌      | 771/2138 [00:12<00:11, 121.07it/s] 37%|███▋      | 787/2138 [00:12<00:10, 127.08it/s] 38%|███▊      | 819/2138 [00:13<00:09, 143.13it/s] 40%|███▉      | 851/2138 [00:13<00:08, 157.02it/s] 41%|████▏     | 883/2138 [00:13<00:07, 170.66it/s] 43%|████▎     | 915/2138 [00:13<00:06, 184.11it/s] 44%|████▍     | 947/2138 [00:13<00:06, 193.35it/s] 46%|████▌     | 979/2138 [00:13<00:05, 209.04it/s] 47%|████▋     | 1011/2138 [00:14<00:05, 224.85it/s] 49%|████▉     | 1043/2138 [00:14<00:04, 240.85it/s] 50%|█████     | 1075/2138 [00:14<00:04, 251.24it/s] 53%|█████▎    | 1123/2138 [00:14<00:03, 279.06it/s] 54%|█████▍    | 1155/2138 [00:14<00:03, 288.84it/s] 56%|█████▋    | 1203/2138 [00:14<00:03, 311.25it/s] 59%|█████▊    | 1251/2138 [00:14<00:02, 338.76it/s] 61%|██████    | 1299/2138 [00:14<00:02, 358.88it/s] 63%|██████▎   | 1347/2138 [00:14<00:02, 380.00it/s] 65%|██████▌   | 1395/2138 [00:15<00:01, 401.74it/s] 68%|██████▊   | 1459/2138 [00:15<00:01, 434.67it/s] 71%|███████   | 1523/2138 [00:15<00:01, 459.81it/s] 74%|███████▍  | 1587/2138 [00:15<00:01, 492.06it/s] 77%|███████▋  | 1651/2138 [00:15<00:00, 518.04it/s] 81%|████████  | 1731/2138 [00:15<00:00, 555.50it/s] 85%|████████▍ | 1811/2138 [00:15<00:00, 592.38it/s] 88%|████████▊ | 1891/2138 [00:15<00:00, 629.71it/s] 92%|█████████▏| 1971/2138 [00:16<00:00, 667.91it/s] 97%|█████████▋| 2067/2138 [00:16<00:00, 711.81it/s]100%|██████████| 2138/2138 [00:16<00:00, 131.93it/s]
[2025/01/01 10:04:01] ppocr DEBUG: Namespace(help='==SUPPRESS==', use_gpu=True, use_xpu=False, use_npu=False, use_mlu=False, ir_optim=True, use_tensorrt=False, min_subgraph_size=15, precision='fp32', gpu_mem=500, gpu_id=0, image_dir=None, page_num=0, det_algorithm='DB', det_model_dir='/home/stud/m/mc085/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_limit_side_len=960, det_limit_type='max', det_box_type='quad', det_db_thresh=0.3, det_db_box_thresh=0.6, det_db_unclip_ratio=1.5, max_batch_size=10, use_dilation=False, det_db_score_mode='fast', det_east_score_thresh=0.8, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_sast_score_thresh=0.5, det_sast_nms_thresh=0.2, det_pse_thresh=0, det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, scales=[8, 16, 32], alpha=1.0, beta=1.0, fourier_degree=5, rec_algorithm='SVTR_LCNet', rec_model_dir='/home/stud/m/mc085/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_batch_num=6, max_text_length=25, rec_char_dict_path='/home/stud/m/mc085/mounted_home/pia11_clean/lib/python3.11/site-packages/paddleocr/ppocr/utils/en_dict.txt', use_space_char=True, vis_font_path='./doc/fonts/simfang.ttf', drop_score=0.5, e2e_algorithm='PGNet', e2e_model_dir=None, e2e_limit_side_len=768, e2e_limit_type='max', e2e_pgnet_score_thresh=0.5, e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_pgnet_valid_set='totaltext', e2e_pgnet_mode='fast', use_angle_cls=True, cls_model_dir='/home/stud/m/mc085/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_image_shape='3, 48, 192', label_list=['0', '180'], cls_batch_num=6, cls_thresh=0.9, enable_mkldnn=False, cpu_threads=10, use_pdserving=False, warmup=False, sr_model_dir=None, sr_image_shape='3, 32, 128', sr_batch_num=1, draw_img_save_dir='./inference_results', save_crop_res=False, crop_res_save_dir='./output', use_mp=False, total_process_num=1, process_id=0, benchmark=False, save_log_path='./log_output/', show_log=True, use_onnx=False, return_word_box=False, output='./output', table_max_len=488, table_algorithm='TableAttn', table_model_dir=None, merge_no_span_structure=True, table_char_dict_path=None, formula_algorithm='LaTeXOCR', formula_model_dir=None, formula_char_dict_path=None, formula_batch_num=1, layout_model_dir=None, layout_dict_path=None, layout_score_threshold=0.5, layout_nms_threshold=0.5, kie_algorithm='LayoutXLM', ser_model_dir=None, re_model_dir=None, use_visual_backbone=True, ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ocr_order_method=None, mode='structure', image_orientation=False, layout=True, table=True, formula=False, ocr=True, recovery=False, recovery_to_markdown=False, use_pdf2docx_api=False, invert=False, binarize=False, alphacolor=(255, 255, 255), lang='en', det=True, rec=True, type='ocr', savefile=False, ocr_version='PP-OCRv4', structure_version='PP-StructureV2')
[2025/01/01 10:04:01] ppocr WARNING: The first GPU is used for inference by default, GPU ID: 0
[2025/01/01 10:04:02] ppocr WARNING: The first GPU is used for inference by default, GPU ID: 0
[2025/01/01 10:04:03] ppocr WARNING: The first GPU is used for inference by default, GPU ID: 0
Could not load library libcudnn_cnn_infer.so.8. Error: libnvrtc.so: cannot open shared object file: No such file or directory


--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::AnalysisPredictor::ZeroCopyRun(bool)
1   paddle::framework::NaiveExecutor::RunInterpreterCore(std::vector<std::string, std::allocator<std::string > > const&, bool, bool)
2   paddle::framework::InterpreterCore::Run(std::vector<std::string, std::allocator<std::string > > const&, bool, bool, bool, bool)
3   paddle::framework::ProgramInterpreter::Run(std::vector<std::string, std::allocator<std::string > > const&, bool, bool, bool, bool)
4   paddle::framework::ProgramInterpreter::Build(std::vector<std::string, std::allocator<std::string > > const&, std::vector<paddle::framework::OpFuncNode, std::allocator<paddle::framework::OpFuncNode> >*, bool)
5   paddle::framework::interpreter::BuildOpFuncList(phi::Place const&, paddle::framework::BlockDesc const&, std::set<std::string, std::less<std::string >, std::allocator<std::string > > const&, std::vector<paddle::framework::OpFuncNode, std::allocator<paddle::framework::OpFuncNode> >*, paddle::framework::VariableScope*, paddle::framework::interpreter::ExecutionConfig const&, std::vector<std::function<void (paddle::framework::OperatorBase*, paddle::framework::Scope*)>, std::allocator<std::function<void (paddle::framework::OperatorBase*, paddle::framework::Scope*)> > > const&, std::vector<std::function<void (paddle::framework::OperatorBase*, paddle::framework::Scope*)>, std::allocator<std::function<void (paddle::framework::OperatorBase*, paddle::framework::Scope*)> > > const&, bool, bool)
6   void phi::KernelImpl<void (*)(phi::GPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DenseTensor const&, paddle::optional<phi::DenseTensor> const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::string const&, std::vector<int, std::allocator<int> > const&, int, std::string const&, std::string const&, std::vector<int, std::allocator<int> > const&, bool, int, float, phi::DenseTensor*, std::vector<phi::DenseTensor*, std::allocator<phi::DenseTensor*> >), &(void phi::fusion::FusedConv2dAddActKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DenseTensor const&, paddle::optional<phi::DenseTensor> const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::string const&, std::vector<int, std::allocator<int> > const&, int, std::string const&, std::string const&, std::vector<int, std::allocator<int> > const&, bool, int, float, phi::DenseTensor*, std::vector<phi::DenseTensor*, std::allocator<phi::DenseTensor*> >))>::KernelCallHelper<paddle::optional<phi::DenseTensor> const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::string const&, std::vector<int, std::allocator<int> > const&, int, std::string const&, std::string const&, std::vector<int, std::allocator<int> > const&, bool, int, float, phi::DenseTensor*, std::vector<phi::DenseTensor*, std::allocator<phi::DenseTensor*> >, phi::TypeTag<int> >::Compute<1, 3, 0, 0, phi::GPUContext const, phi::DenseTensor const, phi::DenseTensor const, phi::DenseTensor const>(phi::KernelContext*, phi::GPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DenseTensor const&)
7   void phi::fusion::FusedConv2dAddActKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DenseTensor const&, paddle::optional<phi::DenseTensor> const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::string const&, std::vector<int, std::allocator<int> > const&, int, std::string const&, std::string const&, std::vector<int, std::allocator<int> > const&, bool, int, float, phi::DenseTensor*, std::vector<phi::DenseTensor*, std::allocator<phi::DenseTensor*> >)
8   phi::fusion::(anonymous namespace)::CudnnConvDescManager::GetCudnnCacheInfo(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, phi::DataType, int, cudnnDataType_t, cudnnTensorFormat_t, std::function<void (cudnnConvolutionFwdAlgo_t*, unsigned long*, cudnnTensorStruct*, cudnnFilterStruct*, cudnnTensorStruct*, cudnnConvolutionStruct*)> const&, std::string const&, double)

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1735722243 (unix time) try "date -d @1735722243" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x11e2f002ed50b) received by PID 3069195 (TID 0x7f1563b15740) from PID 3069195 ***]

srun: error: tars: task 0: Aborted
