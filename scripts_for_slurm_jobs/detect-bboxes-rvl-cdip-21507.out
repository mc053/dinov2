Wed Jan  1 09:47:10 AM CET 2025
Starting RVL-CDIP BBoxes Detection on partition: GPU
Running on: tars
Available CPUs: pid 3063156's current affinity list: 6,7,70,71 (logical CPU ids)
Available GPUs: Wed Jan  1 09:47:10 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 550.54.14              Driver Version: 550.54.14      CUDA Version: 12.4     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA RTX A6000               Off |   00000000:21:00.0 Off |                  Off |
| 30%   34C    P8             22W /  300W |       0MiB /  49140MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
2025-01-01 09:47:42.874172: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-01-01 09:47:46.605814: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
2025-01-01 09:47:46.605886: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
2025-01-01 09:47:47.275980: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2025-01-01 09:47:48.704473: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI AVX512_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
download https://paddleocr.bj.bcebos.com/PP-OCRv3/english/en_PP-OCRv3_det_infer.tar to /home/stud/m/mc085/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer/en_PP-OCRv3_det_infer.tar
  0%|          | 0/3910 [00:00<?, ?it/s]  0%|          | 3/3910 [00:00<06:44,  9.65it/s]  1%|          | 35/3910 [00:00<01:00, 64.11it/s]  2%|▏         | 83/3910 [00:00<00:36, 104.79it/s]  4%|▍         | 147/3910 [00:01<00:26, 143.78it/s]  5%|▍         | 195/3910 [00:01<00:25, 147.29it/s]  7%|▋         | 259/3910 [00:01<00:21, 166.58it/s]  8%|▊         | 323/3910 [00:02<00:19, 186.07it/s] 10%|█         | 403/3910 [00:02<00:17, 200.64it/s] 12%|█▏        | 467/3910 [00:02<00:17, 201.78it/s] 14%|█▍        | 547/3910 [00:03<00:15, 218.06it/s] 16%|█▌        | 627/3910 [00:03<00:14, 229.19it/s] 18%|█▊        | 707/3910 [00:03<00:13, 237.19it/s] 21%|██        | 803/3910 [00:04<00:12, 257.57it/s] 23%|██▎       | 883/3910 [00:04<00:11, 257.24it/s] 25%|██▌       | 979/3910 [00:04<00:10, 271.68it/s] 28%|██▊       | 1091/3910 [00:05<00:09, 297.11it/s] 31%|███       | 1203/3910 [00:05<00:08, 315.08it/s] 34%|███▎      | 1315/3910 [00:05<00:07, 327.74it/s] 37%|███▋      | 1443/3910 [00:05<00:05, 422.55it/s] 38%|███▊      | 1494/3910 [00:05<00:06, 392.65it/s] 41%|████      | 1603/3910 [00:06<00:06, 376.50it/s] 45%|████▌     | 1763/3910 [00:06<00:05, 422.17it/s] 50%|█████     | 1955/3910 [00:06<00:04, 484.05it/s] 55%|█████▌    | 2163/3910 [00:07<00:03, 541.04it/s] 60%|█████▉    | 2339/3910 [00:07<00:02, 600.98it/s] 66%|██████▌   | 2563/3910 [00:07<00:02, 611.94it/s] 71%|███████▏  | 2787/3910 [00:08<00:01, 613.84it/s] 77%|███████▋  | 3011/3910 [00:08<00:01, 643.24it/s] 83%|████████▎ | 3235/3910 [00:08<00:01, 664.25it/s] 88%|████████▊ | 3459/3910 [00:09<00:00, 679.01it/s] 94%|█████████▍| 3683/3910 [00:09<00:00, 689.74it/s]100%|██████████| 3910/3910 [00:09<00:00, 411.60it/s]
download https://paddleocr.bj.bcebos.com/PP-OCRv4/english/en_PP-OCRv4_rec_infer.tar to /home/stud/m/mc085/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer/en_PP-OCRv4_rec_infer.tar
  0%|          | 0/10000 [00:00<?, ?it/s]  0%|          | 3/10000 [00:00<14:03, 11.85it/s]  0%|          | 35/10000 [00:00<02:06, 78.92it/s]  1%|          | 83/10000 [00:00<01:04, 153.99it/s]  1%|▏         | 131/10000 [00:00<00:58, 169.03it/s]  3%|▎         | 307/10000 [00:01<00:26, 369.76it/s]  6%|▋         | 627/10000 [00:01<00:13, 684.04it/s] 10%|█         | 1027/10000 [00:01<00:09, 981.80it/s] 14%|█▍        | 1427/10000 [00:01<00:07, 1172.52it/s] 19%|█▊        | 1859/10000 [00:02<00:06, 1337.83it/s] 23%|██▎       | 2307/10000 [00:02<00:05, 1468.73it/s] 28%|██▊       | 2787/10000 [00:02<00:04, 1595.07it/s] 33%|███▎      | 3283/10000 [00:02<00:03, 1702.03it/s] 38%|███▊      | 3811/10000 [00:03<00:03, 1812.36it/s] 44%|████▎     | 4355/10000 [00:03<00:02, 1910.36it/s] 49%|████▉     | 4931/10000 [00:03<00:02, 2014.48it/s] 55%|█████▌    | 5539/10000 [00:03<00:02, 2124.15it/s] 62%|██████▏   | 6163/10000 [00:04<00:01, 2225.78it/s] 68%|██████▊   | 6835/10000 [00:04<00:01, 2347.41it/s] 75%|███████▌  | 7539/10000 [00:04<00:00, 2469.27it/s] 83%|████████▎ | 8259/10000 [00:04<00:00, 2996.75it/s] 86%|████████▌ | 8592/10000 [00:05<00:00, 2591.12it/s] 90%|█████████ | 9043/10000 [00:05<00:00, 2622.83it/s] 98%|█████████▊| 9843/10000 [00:05<00:00, 2809.09it/s]100%|██████████| 10000/10000 [00:05<00:00, 1811.17it/s]
[2025/01/01 09:48:26] ppocr DEBUG: Namespace(help='==SUPPRESS==', use_gpu=True, use_xpu=False, use_npu=False, use_mlu=False, ir_optim=True, use_tensorrt=False, min_subgraph_size=15, precision='fp32', gpu_mem=500, gpu_id=0, image_dir=None, page_num=0, det_algorithm='DB', det_model_dir='/home/stud/m/mc085/.paddleocr/whl/det/en/en_PP-OCRv3_det_infer', det_limit_side_len=960, det_limit_type='max', det_box_type='quad', det_db_thresh=0.3, det_db_box_thresh=0.6, det_db_unclip_ratio=1.5, max_batch_size=10, use_dilation=False, det_db_score_mode='fast', det_east_score_thresh=0.8, det_east_cover_thresh=0.1, det_east_nms_thresh=0.2, det_sast_score_thresh=0.5, det_sast_nms_thresh=0.2, det_pse_thresh=0, det_pse_box_thresh=0.85, det_pse_min_area=16, det_pse_scale=1, scales=[8, 16, 32], alpha=1.0, beta=1.0, fourier_degree=5, rec_algorithm='SVTR_LCNet', rec_model_dir='/home/stud/m/mc085/.paddleocr/whl/rec/en/en_PP-OCRv4_rec_infer', rec_image_inverse=True, rec_image_shape='3, 48, 320', rec_batch_num=6, max_text_length=25, rec_char_dict_path='/home/stud/m/mc085/mounted_home/pia11_clean/lib/python3.11/site-packages/paddleocr/ppocr/utils/en_dict.txt', use_space_char=True, vis_font_path='./doc/fonts/simfang.ttf', drop_score=0.5, e2e_algorithm='PGNet', e2e_model_dir=None, e2e_limit_side_len=768, e2e_limit_type='max', e2e_pgnet_score_thresh=0.5, e2e_char_dict_path='./ppocr/utils/ic15_dict.txt', e2e_pgnet_valid_set='totaltext', e2e_pgnet_mode='fast', use_angle_cls=True, cls_model_dir='/home/stud/m/mc085/.paddleocr/whl/cls/ch_ppocr_mobile_v2.0_cls_infer', cls_image_shape='3, 48, 192', label_list=['0', '180'], cls_batch_num=6, cls_thresh=0.9, enable_mkldnn=False, cpu_threads=10, use_pdserving=False, warmup=False, sr_model_dir=None, sr_image_shape='3, 32, 128', sr_batch_num=1, draw_img_save_dir='./inference_results', save_crop_res=False, crop_res_save_dir='./output', use_mp=False, total_process_num=1, process_id=0, benchmark=False, save_log_path='./log_output/', show_log=True, use_onnx=False, return_word_box=False, output='./output', table_max_len=488, table_algorithm='TableAttn', table_model_dir=None, merge_no_span_structure=True, table_char_dict_path=None, formula_algorithm='LaTeXOCR', formula_model_dir=None, formula_char_dict_path=None, formula_batch_num=1, layout_model_dir=None, layout_dict_path=None, layout_score_threshold=0.5, layout_nms_threshold=0.5, kie_algorithm='LayoutXLM', ser_model_dir=None, re_model_dir=None, use_visual_backbone=True, ser_dict_path='../train_data/XFUND/class_list_xfun.txt', ocr_order_method=None, mode='structure', image_orientation=False, layout=True, table=True, formula=False, ocr=True, recovery=False, recovery_to_markdown=False, use_pdf2docx_api=False, invert=False, binarize=False, alphacolor=(255, 255, 255), lang='en', det=True, rec=True, type='ocr', savefile=False, ocr_version='PP-OCRv4', structure_version='PP-StructureV2')
[2025/01/01 09:48:26] ppocr WARNING: The first GPU is used for inference by default, GPU ID: 0
[2025/01/01 09:48:27] ppocr WARNING: The first GPU is used for inference by default, GPU ID: 0
[2025/01/01 09:48:27] ppocr WARNING: The first GPU is used for inference by default, GPU ID: 0
Processing RVL-CDIP images:   0%|          | 0/10 [00:00<?, ?it/s]Could not load library libcudnn_cnn_infer.so.8. Error: libnvrtc.so: cannot open shared object file: No such file or directory


--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::AnalysisPredictor::ZeroCopyRun(bool)
1   paddle::framework::NaiveExecutor::RunInterpreterCore(std::vector<std::string, std::allocator<std::string > > const&, bool, bool)
2   paddle::framework::InterpreterCore::Run(std::vector<std::string, std::allocator<std::string > > const&, bool, bool, bool, bool)
3   paddle::framework::ProgramInterpreter::Run(std::vector<std::string, std::allocator<std::string > > const&, bool, bool, bool, bool)
4   paddle::framework::ProgramInterpreter::Build(std::vector<std::string, std::allocator<std::string > > const&, std::vector<paddle::framework::OpFuncNode, std::allocator<paddle::framework::OpFuncNode> >*, bool)
5   paddle::framework::interpreter::BuildOpFuncList(phi::Place const&, paddle::framework::BlockDesc const&, std::set<std::string, std::less<std::string >, std::allocator<std::string > > const&, std::vector<paddle::framework::OpFuncNode, std::allocator<paddle::framework::OpFuncNode> >*, paddle::framework::VariableScope*, paddle::framework::interpreter::ExecutionConfig const&, std::vector<std::function<void (paddle::framework::OperatorBase*, paddle::framework::Scope*)>, std::allocator<std::function<void (paddle::framework::OperatorBase*, paddle::framework::Scope*)> > > const&, std::vector<std::function<void (paddle::framework::OperatorBase*, paddle::framework::Scope*)>, std::allocator<std::function<void (paddle::framework::OperatorBase*, paddle::framework::Scope*)> > > const&, bool, bool)
6   void phi::KernelImpl<void (*)(phi::GPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DenseTensor const&, paddle::optional<phi::DenseTensor> const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::string const&, std::vector<int, std::allocator<int> > const&, int, std::string const&, std::string const&, std::vector<int, std::allocator<int> > const&, bool, int, float, phi::DenseTensor*, std::vector<phi::DenseTensor*, std::allocator<phi::DenseTensor*> >), &(void phi::fusion::FusedConv2dAddActKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DenseTensor const&, paddle::optional<phi::DenseTensor> const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::string const&, std::vector<int, std::allocator<int> > const&, int, std::string const&, std::string const&, std::vector<int, std::allocator<int> > const&, bool, int, float, phi::DenseTensor*, std::vector<phi::DenseTensor*, std::allocator<phi::DenseTensor*> >))>::KernelCallHelper<paddle::optional<phi::DenseTensor> const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::string const&, std::vector<int, std::allocator<int> > const&, int, std::string const&, std::string const&, std::vector<int, std::allocator<int> > const&, bool, int, float, phi::DenseTensor*, std::vector<phi::DenseTensor*, std::allocator<phi::DenseTensor*> >, phi::TypeTag<int> >::Compute<1, 3, 0, 0, phi::GPUContext const, phi::DenseTensor const, phi::DenseTensor const, phi::DenseTensor const>(phi::KernelContext*, phi::GPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DenseTensor const&)
7   void phi::fusion::FusedConv2dAddActKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DenseTensor const&, paddle::optional<phi::DenseTensor> const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::string const&, std::vector<int, std::allocator<int> > const&, int, std::string const&, std::string const&, std::vector<int, std::allocator<int> > const&, bool, int, float, phi::DenseTensor*, std::vector<phi::DenseTensor*, std::allocator<phi::DenseTensor*> >)
8   phi::fusion::(anonymous namespace)::CudnnConvDescManager::GetCudnnCacheInfo(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, phi::DataType, int, cudnnDataType_t, cudnnTensorFormat_t, std::function<void (cudnnConvolutionFwdAlgo_t*, unsigned long*, cudnnTensorStruct*, cudnnFilterStruct*, cudnnTensorStruct*, cudnnConvolutionStruct*)> const&, std::string const&, double)

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1735721312 (unix time) try "date -d @1735721312" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x11e2f002ebd8a) received by PID 3063178 (TID 0x7f280d90b740) from PID 3063178 ***]

srun: error: tars: task 0: Aborted
